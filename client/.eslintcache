[{"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\index.js":"1","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\App.js":"2","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\PAGES\\RootAppStructure.js":"3","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\RootContext.js":"4","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\subContexts\\AuthContext.js":"5","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\subContexts\\AllUserContext.js":"6","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\PAGES\\Wrapper.js":"7","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\BackToTopButton.js":"8","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\Navbar.js":"9","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\MobileFooterNav.js":"10","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\Footer.js":"11","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\home\\Home.js":"12","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\Profile.js":"13","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UpdateProfile.js":"14","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UserProfile.js":"15","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UserList.js":"16","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\actionPage\\ActionPage.js":"17","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\contact\\Contact.js":"18","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\Login.js":"19","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\SignUpForm.js":"20","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\Signup.js":"21","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\LogInForm.js":"22","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\reset\\ForgottenForm.js":"23","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\reset\\ResetPassword.js":"24","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\verify\\VerifyEmail.js":"25","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\verify\\VerifyDoor.js":"26","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\verify\\ChangeEmail.js":"27","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\footerNavLinks\\SignedInFooterLinks.js":"28","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\navLinks\\SignedInLinks.js":"29","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\navLinks\\SignedOutLinks.js":"30","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\footerNavLinks\\SignedOutFooterLinks.js":"31","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UserListItem.js":"32","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\MyAlerts.js":"33","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\MyLoader.js":"34","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\MyWelcome.js":"35","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\loaders\\BouncingLoader.js":"36","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\loaders\\SpinningLoader.js":"37","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\loaders\\FlippingLoader.js":"38","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\subContexts\\AllTaskContext.js":"39"},{"size":237,"mtime":1601785004933,"results":"40","hashOfConfig":"41"},{"size":1035,"mtime":1603255320846,"results":"42","hashOfConfig":"41"},{"size":546,"mtime":1601774464870,"results":"43","hashOfConfig":"41"},{"size":444,"mtime":1606618938941,"results":"44","hashOfConfig":"41"},{"size":109,"mtime":1603167670805,"results":"45","hashOfConfig":"41"},{"size":389,"mtime":1603074579135,"results":"46","hashOfConfig":"41"},{"size":2386,"mtime":1605877356213,"results":"47","hashOfConfig":"41"},{"size":604,"mtime":1601774464947,"results":"48","hashOfConfig":"41"},{"size":2142,"mtime":1606355627798,"results":"49","hashOfConfig":"41"},{"size":656,"mtime":1602929409396,"results":"50","hashOfConfig":"41"},{"size":1029,"mtime":1605920865323,"results":"51","hashOfConfig":"41"},{"size":959,"mtime":1606374307165,"results":"52","hashOfConfig":"41"},{"size":4779,"mtime":1605920826880,"results":"53","hashOfConfig":"41"},{"size":7091,"mtime":1605922721595,"results":"54","hashOfConfig":"41"},{"size":4438,"mtime":1605878695948,"results":"55","hashOfConfig":"41"},{"size":1788,"mtime":1606011442056,"results":"56","hashOfConfig":"41"},{"size":3695,"mtime":1606617825626,"results":"57","hashOfConfig":"41"},{"size":3014,"mtime":1605921192775,"results":"58","hashOfConfig":"41"},{"size":4167,"mtime":1606355627798,"results":"59","hashOfConfig":"41"},{"size":6312,"mtime":1606355627814,"results":"60","hashOfConfig":"41"},{"size":4065,"mtime":1606355627798,"results":"61","hashOfConfig":"41"},{"size":3577,"mtime":1606355627798,"results":"62","hashOfConfig":"41"},{"size":2824,"mtime":1605878727066,"results":"63","hashOfConfig":"41"},{"size":3660,"mtime":1605878727066,"results":"64","hashOfConfig":"41"},{"size":2301,"mtime":1605878727055,"results":"65","hashOfConfig":"41"},{"size":2413,"mtime":1605878727058,"results":"66","hashOfConfig":"41"},{"size":2916,"mtime":1605878727058,"results":"67","hashOfConfig":"41"},{"size":852,"mtime":1605850833079,"results":"68","hashOfConfig":"41"},{"size":2319,"mtime":1605922676483,"results":"69","hashOfConfig":"41"},{"size":1172,"mtime":1605594800888,"results":"70","hashOfConfig":"41"},{"size":851,"mtime":1601774465001,"results":"71","hashOfConfig":"41"},{"size":472,"mtime":1603170687433,"results":"72","hashOfConfig":"41"},{"size":333,"mtime":1605585923908,"results":"73","hashOfConfig":"41"},{"size":385,"mtime":1605851879481,"results":"74","hashOfConfig":"41"},{"size":387,"mtime":1605851852515,"results":"75","hashOfConfig":"41"},{"size":481,"mtime":1605848716988,"results":"76","hashOfConfig":"41"},{"size":435,"mtime":1605848846216,"results":"77","hashOfConfig":"41"},{"size":438,"mtime":1605848761575,"results":"78","hashOfConfig":"41"},{"size":389,"mtime":1606618849741,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"19po23z",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\index.js",[],["168","169"],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\App.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\PAGES\\RootAppStructure.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\RootContext.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\subContexts\\AuthContext.js",["170"],"import React, { createContext } from 'react'\r\n\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\subContexts\\AllUserContext.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\PAGES\\Wrapper.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\BackToTopButton.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\Navbar.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\MobileFooterNav.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\Footer.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\home\\Home.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\Profile.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UpdateProfile.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UserProfile.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UserList.js",["171","172","173","174"],"import M from 'materialize-css'\r\nimport '../../styles/profile/UserList.scss'\r\n\r\nimport React, { useEffect, useContext, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { usePaginatedQuery } from 'react-query'\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\nimport { AuthContext } from '../../contexts/subContexts/AuthContext'\r\nimport { AllUserContext } from '../../contexts/subContexts/AllUserContext'\r\n\r\n\r\n\r\nimport UserListItem from './UserListItem'\r\nimport MyLoader from '../../helpers/MyLoader';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getAllUsers = async ()=>{\r\n  \r\n\r\n  const allUserRes = await fetch('/user/all');\r\n  const allUserData = await allUserRes.json();\r\n\r\n  console.log(allUserData);\r\n  return allUserData\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction UserList() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext)\r\n  const { allUsers, setAllUsers } = useContext(AllUserContext)\r\n  const history = useHistory()\r\n  \r\n\r\n\r\n  const { resolvedData, latestData, status } = usePaginatedQuery(\"allusers\", getAllUsers)\r\n  if(resolvedData) setAllUsers(resolvedData);\r\n\r\n\r\n\r\n\r\n\r\n  if(!userData) history.push('/login');\r\n  if(userData && !userData.isVerified) history.push('/verifyDoor');\r\n\r\n  return !allUsers[0] ?  (\r\n    <div className=\"myLoaderPageHolder\">\r\n      <MyLoader/>\r\n    </div>\r\n  ) : (\r\n    <div className=\"container myUserListPage\" >      \r\n      <h6 className=\"blue-text\">All users</h6>\r\n\r\n\r\n      <ul>\r\n        {\r\n          allUsers[0] && allUsers.map((item, index)=>{\r\n            return (\r\n              <Link to={ \"/userProfile/\" + index } key={ index } >\r\n                <UserListItem item={ item } />\r\n              </Link>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\actionPage\\ActionPage.js",["175","176","177","178"],"import M from 'materialize-css'\r\nimport '../../styles/ActionPage.scss';\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\nimport { Toast } from '../../helpers/MyAlerts';\r\n\r\n\r\n\r\nfunction ActionPage() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [rank, setRank] = useState('bronze');\r\n  const [ description, setDescription] = useState('');\r\n  \r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const handleSubmit = async (e)=>{\r\n    e.preventDefault();\r\n\r\n    const houseWorkObj = {};\r\n    if(title) houseWorkObj.title = title;\r\n    if(rank) houseWorkObj.rank = rank;\r\n\r\n\r\n    const response = await fetch('/houseWork', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(houseWorkObj)\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n\r\n    if(data.error){\r\n      \r\n      setError(data.msg);\r\n\r\n    } else {\r\n      setTitle('');\r\n\r\n      Toast.fire({\r\n        icon: 'success',\r\n        title: 'Your task is gamified!'\r\n      })\r\n\r\n      setTimeout(()=>{\r\n        history.push('/');\r\n      }, 3000)\r\n\r\n    }\r\n\r\n\r\n    console.log(`Submit fired!`);\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\" >\r\n      <form onSubmit= { handleSubmit } className=\"myDefaultForm\" >\r\n        <h4 className=\"myDefaultFormName\" >Gamify Housework</h4>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"myInputHolder\">            \r\n          <label htmlFor=\"title\">Title <span className=\"red-text\">(Required)</span></label>\r\n          <div>\r\n            <i className=\"myPrefix far fa-address-card\"></i>\r\n            <input type=\"text\" name=\"contactTitle\" value={ title } onChange={ e=> setTitle(e.target.value) } required />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"myInputHolder\">\r\n        <label htmlFor=\"content\">Rank of the task <span className=\"grey-text\">(Optional)</span></label>\r\n          <div>\r\n            <i className=\"myPrefix fa fa-edit\">Rank</i>\r\n            \r\n\r\n                       \r\n            <select>              \r\n              <option value=\"bronze\" selected>Bronze</option>\r\n              <option value=\"silver\">Silver</option>\r\n              <option value=\"gold\">Gold</option>\r\n            </select>\r\n            <label>Materialize Select</label>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <div className=\"myInputHolder\">\r\n        <label htmlFor=\"content\">Description <span className=\"grey-text\">(Optional)</span></label>\r\n          <div>\r\n            <i className=\"myPrefix fa fa-edit\"></i>\r\n            <textarea name=\"content\" className= \"materialize-textarea\" value={ description } onChange={ e=> setDescription(e.target.value) } required ></textarea>\r\n          </div>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"input-field right-align\">\r\n          <button type=\"submit\" className= \"btn myBtn waves-effect waves-light\" id= \"myDownloadBtn\">\r\n            Gamify <i className=\"fa fa-gamepad\"></i>\r\n          </button>\r\n        </div>\r\n\r\n\r\n        {/* <div className=\"myDefaultFormFooter\">\r\n          <p>Wanna know more about me?</p>\r\n          \r\n          <p>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://silvenleaf.github.io\" className=\"myThemeColorText\">SilvenLEAF.github.io</a>\r\n          </p>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionPage\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\contact\\Contact.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\Login.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\SignUpForm.js",["179","180"],"import M from 'materialize-css'\r\nimport '../../../styles/auth/AuthDoor.scss'\r\nimport '../../../styles/auth/AuthForm.scss'\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts'\r\n\r\n\r\n\r\n\r\nfunction SignUpForm() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [gender, setGender]= useState('male');\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const handleSubmit = async (e)=>{\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n  \r\n      const newUser = {};\r\n      if(username) newUser.username = username;\r\n      if(email) newUser.email = email.toLowerCase();    \r\n      if(password !== confirmPassword) return setError(`Type same password twice`);    \r\n      if(password) newUser.password = password;\r\n  \r\n  \r\n  \r\n  \r\n  \r\n      \r\n      const femaleIcons = [\r\n        'userFemaleBlue',\r\n        'userFemaleGreen',\r\n        'userFemaleOrange',\r\n        'userFemalePink',\r\n        'userFemalePurple',\r\n        'userFemaleRed',\r\n        'userFemaleTheme',\r\n        'userFemaleYellow',\r\n      ]\r\n      \r\n      const maleIcons = [\r\n        'userMaleBlue',\r\n        'userMaleGreen',\r\n        'userMaleOrange',\r\n        'userMalePink',\r\n        'userMalePurple',\r\n        'userMaleRed',\r\n        'userMaleTheme',\r\n        'userMaleYellow',\r\n      ]\r\n  \r\n      const n = Math.floor(Math.random() * maleIcons.length);\r\n  \r\n      newUser.profileImage = `/images/users/${ (gender === 'male') ?  maleIcons[n] : femaleIcons[n] }.png`\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n      \r\n  \r\n  \r\n      const signupRes = await fetch('/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newUser)\r\n      });\r\n      const signupData = await signupRes.json();\r\n      if(signupData.error) setError(signupData.msg);\r\n      \r\n      console.log(signupData)\r\n  \r\n  \r\n      \r\n      \r\n      const loggedInUserRes = await fetch('/user');\r\n      const loggedInUserData = await loggedInUserRes.json();\r\n      if(loggedInUserData.error) setError(loggedInUserData.msg);\r\n  \r\n      console.log(loggedInUserData); \r\n      \r\n      if(loggedInUserData.user){\r\n        \r\n        setTimeout(()=>{\r\n          setUserData(loggedInUserData.user);\r\n          history.push('/');\r\n        }, 3000)\r\n      }\r\n  \r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      if(err.error) setError(err.msg);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n  if(userData) history.push('/')\r\n\r\n  return (\r\n    <div className=\"container myAuthForm\" >\r\n      <div className=\"myAuthAppName\">GamifyHouseWorks</div>\r\n      <div className=\"myAuthTitle\">Sign up a new account</div>\r\n\r\n      <p className=\"center-align red-text\"> { error } </p>\r\n\r\n\r\n      <form onSubmit={ handleSubmit } >\r\n        <div className=\"input-field\">\r\n          <i className=\"prefix fa fa-envelope\"></i>\r\n          <input type=\"email\" value={ email } onChange={ e=> setEmail(e.target.value) } required />\r\n          <label htmlFor=\"email\">Email <span className=\"red-text\">(Required)</span></label>\r\n        </div>\r\n\r\n        \r\n        \r\n        <div className=\"input-field\">\r\n          <i className=\"prefix fa fa-user-plus\"></i>\r\n          <input type=\"text\" value={ username } onChange={ e=> setUsername(e.target.value) } required />\r\n          <label htmlFor=\"username\">Your Username <span className=\"red-text\">(Required)</span></label>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"input-field\">\r\n        <i className=\"prefix material-icons\">memory</i>\r\n          <input type=\"password\" required autoComplete=\"off\" \r\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters long\"\r\n\r\n            value={ password } onChange={ e=> setPassword(e.target.value) }\r\n           />\r\n          <label htmlFor=\"password\">Password <span className=\"red-text\">(Required) </span> </label>\r\n        </div>\r\n\r\n\r\n        <div className=\"input-field\">\r\n          <i className=\"prefix material-icons\">memory</i>\r\n          <input type=\"password\" autoComplete=\"off\" value={ confirmPassword } onChange={ e=> setConfirmPassword(e.target.value) } required />\r\n          <label htmlFor=\"confirmPassword\">Confirm Password <span className=\"red-text\">(Required)</span> </label>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        <div className=\"input-field\">\r\n          <p>\r\n          \r\n            <label style={{ marginRight: \"50px\" }} >\r\n              <input type=\"radio\" id=\"maleRadio\" className=\"with-gap\" name=\"gender\" onChange={ e=> setGender('male') } />\r\n              <span>I'm Male</span>\r\n            </label>\r\n          \r\n          \r\n          \r\n            <label >\r\n              <input type=\"radio\" id=\"femaleRadio\" className=\"with-gap\" name=\"gender\" onChange={ e=> setGender('female') } />\r\n              <span>I'm Female</span>\r\n            </label>\r\n          \r\n          </p>        \r\n          \r\n          \r\n         \r\n        </div>\r\n\r\n\r\n\r\n\r\n        <p className=\"myAgreeTermsAndConditions\">\r\n          By signing up you confirm that you've read and agreed our <a href=\"#\">User Notice</a> and <a href=\"#\">Privacy Policy</a>\r\n        </p>\r\n\r\n\r\n        <div className=\"input-field right-align\">\r\n          <button className=\"btn myBtn waves-effect waves-light\">\r\n            Sign up\r\n          </button>\r\n        </div>\r\n\r\n       \r\n\r\n\r\n        <div className=\"myAuthFormFooter\">\r\n          Already have an account? <Link to=\"/login\">Log in</Link>\r\n        </div>\r\n\r\n\r\n        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\Signup.js",["181"],"import M from 'materialize-css'\r\nimport '../../../styles/auth/AuthDoor.scss'\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Signup() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n\r\n  \r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const demoLogin = async (e)=>{\r\n    e.preventDefault();\r\n\r\n    try {\r\n      \r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n      \r\n  \r\n      const demoUser = { email: `demo@gmail.com`, password: `0123456789` };\r\n      \r\n      \r\n      \r\n  \r\n      \r\n  \r\n  \r\n      const loginRes = await fetch('/demo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(demoUser)\r\n      });\r\n      \r\n      const loginData = await loginRes.json();\r\n      if(loginData.error) setError(loginData.msg);\r\n    \r\n  \r\n      \r\n  \r\n  \r\n      const loggedInUserRes = await fetch('/user');\r\n      const loggedInUserData = await loggedInUserRes.json();\r\n      if(loggedInUserData.error) setError(loggedInUserData.msg);\r\n  \r\n\r\n      console.log(loggedInUserData); \r\n      \r\n      if(loggedInUserData.user){\r\n        \r\n        setTimeout(()=>{\r\n          setUserData(loggedInUserData.user);\r\n          history.push('/');\r\n        }, 3000)\r\n      }\r\n  \r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      if(err.error) setError(err.msg);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if(userData) history.push('/')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container myAuthDoor\"\r\n      \r\n\r\n    >\r\n      <div className=\"myAuthAppName\">GamifyHouseWorks</div>\r\n      <div className=\"myAuthTitle\">Sign up a new account</div>\r\n\r\n\r\n      <form>\r\n\r\n\r\n\r\n\r\n        <div className=\"myOauthButtonsHolder\">\r\n          \r\n\r\n          <Link to=\"/signupForm\">\r\n          <div className=\"myOauthBtn myLocalAuth\">\r\n            <i className=\"fa fa-key\"></i> Sign up with Email\r\n          </div>\r\n          </Link>\r\n        \r\n          \r\n\r\n\r\n\r\n          <div className=\"myOauthBtn myDemoAuth\" onClick={ demoLogin } >\r\n            <i className=\"fa fa-key\"></i> Log in for DEMO\r\n          </div>\r\n\r\n\r\n\r\n          \r\n          \r\n          <div className=\"myOauthDividingOR\">OR</div>\r\n          <hr className=\"myOauthDividingHR\"/>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <a href=\"/auth/google\" className=\"myOauthBtn myOauthGoogle\">\r\n            <i className=\"fa fa-google\"></i> Continue with Google\r\n          </a>\r\n          \r\n          \r\n          \r\n          \r\n          <a href=\"/auth/linkedin\" className=\"myOauthBtn myOauthLinkedin\">\r\n            <i className=\"fa fa-linkedin\"></i> Continue with LinkedIN\r\n          </a>\r\n          \r\n          \r\n          \r\n          \r\n          <a href=\"/auth/github\" className=\"myOauthBtn myOauthGithub\">\r\n            <i className=\"fa fa-github\"></i> Continue with Github\r\n          </a>\r\n          \r\n          \r\n          \r\n          <a href=\"/auth/twitter\" className=\"myOauthBtn myOauthTwitter\">\r\n            <i className=\"fa fa-twitter\"></i> Continue with Twitter\r\n          </a>\r\n          \r\n          \r\n          \r\n          <div className=\"myOauthBtn myOauthInstagram\">\r\n            <i className=\"fa fa-instagram\"></i> Continue with Instagram\r\n          </div>\r\n\r\n\r\n                            \r\n          \r\n          \r\n          <a href=\"/auth/facebook\" className=\"myOauthBtn myOauthFacebook\">\r\n            <i className=\"fa fa-facebook\"></i> Continue with Facebook\r\n          </a>\r\n          \r\n          \r\n          \r\n          \r\n\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"myAuthFormFooter\">\r\n          Already have an account? <Link to=\"/login\">Log in</Link>\r\n        </div>\r\n\r\n\r\n        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\signupLogin\\LogInForm.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\reset\\ForgottenForm.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\reset\\ResetPassword.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\verify\\VerifyEmail.js",["182"],"import M from 'materialize-css'\r\nimport '../../../styles/VerifyDoor.scss';\r\n\r\n\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction VerifyEmail() {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext);\r\n\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const handleVerify = (e)=>{\r\n    \r\n\r\n    try {\r\n      \r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n      \r\n      setTimeout( async()=>{\r\n        const response = await fetch('/verifyEmail', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ token })\r\n        });\r\n    \r\n        const data = await response.json();\r\n  \r\n        console.log(data);\r\n  \r\n  \r\n        if(data.error) {\r\n          setError(data.msg);\r\n        } else {\r\n          Toast.fire({\r\n            icon: 'success',\r\n            title: 'Account Verified'\r\n          })\r\n          \r\n          setTimeout(()=>{\r\n            setUserData(data);\r\n            history.push('/');\r\n          }, 3000)\r\n        }\r\n      }, 3000)\r\n      \r\n  \r\n  \r\n  \r\n    } catch (err) {      \r\n      console.log(err);\r\n\r\n      if(err.error) setError(err.msg);\r\n\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n\r\n  \r\n  if(userData && userData.isVerified) history.push('/');\r\n\r\n\r\n  return (\r\n    <div className=\"container myVerifyDoorPage\"\r\n      \r\n\r\n    >\r\n      <h5 className=\"pageTitle red-text center-align\">Verify your Account</h5>\r\n\r\n      <p className=\"center-align\">\r\n        Click below to verify your email\r\n      </p>\r\n\r\n      \r\n      <div className=\"myBtnsHolder center-align\">\r\n        <button className=\"btn myBtn myCornerless\" onClick={ handleVerify } >Verify</button>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default VerifyEmail\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\verify\\VerifyDoor.js",["183"],"import M from 'materialize-css'\r\nimport '../../../styles/VerifyDoor.scss';\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts'\r\n\r\n\r\n\r\nfunction VerifyDoor() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const handleRequestVerification = async ()=>{\r\n    try {\r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n      \r\n      const response = await fetch('/requestVerification', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email: userData.local.email})\r\n      });\r\n  \r\n      const data = await response.json();\r\n      console.log(data)\r\n\r\n      if(data.error) {\r\n        setError(data.msg);\r\n      } else{\r\n        Toast.fire({\r\n          icon: 'success',\r\n          title: 'Check your email for further instructions'\r\n        })\r\n      }\r\n      \r\n\r\n      \r\n    } catch (err) {\r\n      console.log(err);\r\n      if(err.error) setError(err.msg)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n\r\n  if(!userData) history.push('/login');\r\n  if(userData && userData.isVerified) history.push('/');\r\n  \r\n  \r\n  return (\r\n    <div className=\"container myVerifyDoorPage\"\r\n      \r\n\r\n    >\r\n      <h5 className=\"pageTitle red-text center-align\">Account NOT verified!</h5>\r\n\r\n      <p>\r\n        Your account is NOT verified. You must verify your account to continue. Click on the Verify Button to verify your account.\r\n      </p>\r\n\r\n      <p>\r\n        <span className=\"red-text\"> { userData.local.email } </span> Not your mail? Click on the Change Email Button to change your email.\r\n      </p>\r\n\r\n      <div className=\"myBtnsHolder right-align\">\r\n        <button className=\"btn myBtn myCornerless\" onClick={ handleRequestVerification } >Verify Account</button>\r\n        <Link to=\"/changeEmail\" className=\"btn mySecondaryBtn myCornerless\">Change Email</Link>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerifyDoor\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\auth.js\\verify\\ChangeEmail.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\footerNavLinks\\SignedInFooterLinks.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\navLinks\\SignedInLinks.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\navLinks\\SignedOutLinks.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\layouts\\footerNavLinks\\SignedOutFooterLinks.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\components\\profile\\UserListItem.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\MyAlerts.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\MyLoader.js",["184","185"],"import '../styles/loaders/Loader.scss'\r\n\r\nimport BouncingLoader from './loaders/BouncingLoader'\r\nimport SpinningLoader from './loaders/SpinningLoader'\r\nimport FlippingLoader from './loaders/FlippingLoader'\r\n\r\n\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\n\r\nfunction MyLoader({ title }) {\r\n  return (\r\n    <>\r\n     <SpinningLoader title={ title } />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyLoader\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\MyWelcome.js",["186","187"],"import '../styles/loaders/Loader.scss'\r\n\r\nimport BouncingLoader from './loaders/BouncingLoader'\r\nimport SpinningLoader from './loaders/SpinningLoader'\r\nimport FlippingLoader from './loaders/FlippingLoader'\r\n\r\n\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\n\r\nfunction MyWelcome({ title }) {\r\n  return (\r\n    <>\r\n     <FlippingLoader title={ title } />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyWelcome\r\n","E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\loaders\\BouncingLoader.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\loaders\\SpinningLoader.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\helpers\\loaders\\FlippingLoader.js",[],"E:\\SilvenLEAF\\GamifyHouseWorks\\client\\src\\contexts\\subContexts\\AllTaskContext.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"196","line":4,"column":40,"nodeType":"194","messageId":"195","endLine":4,"endColumn":48},{"ruleId":"192","severity":1,"message":"197","line":50,"column":21,"nodeType":"194","messageId":"195","endLine":50,"endColumn":32},{"ruleId":"192","severity":1,"message":"198","line":56,"column":25,"nodeType":"194","messageId":"195","endLine":56,"endColumn":35},{"ruleId":"192","severity":1,"message":"199","line":56,"column":37,"nodeType":"194","messageId":"195","endLine":56,"endColumn":43},{"ruleId":"192","severity":1,"message":"200","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"201","line":22,"column":16,"nodeType":"194","messageId":"195","endLine":22,"endColumn":23},{"ruleId":"192","severity":1,"message":"202","line":23,"column":11,"nodeType":"194","messageId":"195","endLine":23,"endColumn":22},{"ruleId":"192","severity":1,"message":"203","line":23,"column":24,"nodeType":"194","messageId":"195","endLine":23,"endColumn":38},{"ruleId":"204","severity":1,"message":"205","line":224,"column":69,"nodeType":"206","endLine":224,"endColumn":81},{"ruleId":"204","severity":1,"message":"205","line":224,"column":101,"nodeType":"206","endLine":224,"endColumn":113},{"ruleId":"192","severity":1,"message":"207","line":31,"column":10,"nodeType":"194","messageId":"195","endLine":31,"endColumn":15},{"ruleId":"192","severity":1,"message":"200","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":14},{"ruleId":"192","severity":1,"message":"197","line":23,"column":21,"nodeType":"194","messageId":"195","endLine":23,"endColumn":32},{"ruleId":"192","severity":1,"message":"208","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":22},{"ruleId":"192","severity":1,"message":"209","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":22},{"ruleId":"192","severity":1,"message":"208","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":22},{"ruleId":"192","severity":1,"message":"210","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":22},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setUserData' is assigned a value but never used.","'latestData' is assigned a value but never used.","'status' is assigned a value but never used.","'Link' is defined but never used.","'setRank' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","'BouncingLoader' is defined but never used.","'FlippingLoader' is defined but never used.","'SpinningLoader' is defined but never used.","no-global-assign","no-unsafe-negation"]